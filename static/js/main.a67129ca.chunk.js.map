{"version":3,"sources":["Components/Movies/Movie/movie.module.scss","Pages/Home/home.module.scss","Pages/Favourites/favourites.module.scss","Layout/Main/main.module.scss","redux/reducers/favourites.js","redux/reducers/movies.js","redux/reducers/index.js","redux/store.js","Layout/Header/Header.jsx","Components/Menu/Menu.jsx","redux/actions/movies.js","API/Movie.Service.js","Hooks/useFetching.js","Hooks/useIsMount.js","Components/Filter/Filter.jsx","Components/Search/Search.jsx","Components/Movies/Movie/Movie.jsx","redux/actions/favourites.js","Components/Messages/Empty.jsx","Components/Movies/Movies.jsx","Components/Spinner/Spinner.jsx","Pages/Home/Home.jsx","Pages/Favourites/Favourites.jsx","Pages/Error/Error.jsx","Components/AppRouter/AppRouter.jsx","Layout/Main/Main.jsx","App.jsx","index.jsx","Layout/Header/header.module.scss"],"names":["module","exports","setFavouritesInLocal","favourites","window","localStorage","setItem","JSON","stringify","initalFavouritesState","getItem","parse","getInitialArray","state","action","type","isAdded","find","favourite","imdbID","payload","message","error","Title","success","updateFavourites","filter","initalMoviesState","items","movies","isLoaded","rootReducer","combineReducers","favouritesReducer","moviesReducer","store","createStore","root","__REDUX_DEVTOOLS_EXTENSION__","Header","className","styles","header","gutter","align","justify","xs","sm","logo","title","href","social","target","rel","GithubOutlined","menus","id","path","Menu","location","useLocation","map","menuItem","pathname","to","setMovies","API_KEY","process","MovieService","nameMovie","useFetching","url","useState","data","setData","isLoading","setIsLoading","setError","fetchData","a","axios","get","response","useEffect","useIsMount","isMountRef","useRef","current","radioes","Filter","props","getFilterValue","filterValue","setFilterValue","Group","onChange","e","value","radio","Text","Search","getMovies","isMount","searchValue","setSearchValue","onSearch","placeholder","allowClear","enterButton","size","Movie","year","poster","dispatch","useDispatch","lg","xl","cover","Image","style","height","width","alt","src","actions","QuestionCircleOutlined","PlayCircleOutlined","onClick","open","PlusCircleOutlined","Year","Poster","Type","MinusCircleOutlined","styled","meta","level","description","Empty","Movies","length","movie","span","Spinner","tip","Main","useSelector","getUrlMovies","setUrl","Content","container","Favourites","Error","AppRouter","exact","Home","mainLayout","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a67129ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"movie_meta__1Fx2k\",\"description\":\"movie_description__2j5ky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__d8_oq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"favourites_container__1u1uQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainLayout\":\"main_mainLayout__mSe0i\"};","import { message } from 'antd';\r\n\r\nconst getInitialArray = () => {\r\n  const favourites = window.localStorage.getItem('favourites');\r\n\r\n  return JSON.parse(favourites) || [];\r\n};\r\n\r\nconst setFavouritesInLocal = (favourites) => {\r\n  window.localStorage.setItem('favourites', JSON.stringify(favourites));\r\n};\r\n\r\nconst initalFavouritesState = {\r\n  favourites: getInitialArray(),\r\n};\r\n\r\nconst favourites = (state = initalFavouritesState, action) => {\r\n  if (action.type === 'ADD_FAVOURITE') {\r\n    const isAdded = state.favourites.find(\r\n      (favourite) => favourite.imdbID === action.payload.imdbID,\r\n    );\r\n\r\n    if (isAdded) {\r\n      message.error(`${action.payload.Title} has already been added`);\r\n      return state;\r\n    }\r\n\r\n    message.success(`${action.payload.Title} added to favourites films`);\r\n\r\n    const updateFavourites = [...state.favourites, action.payload];\r\n    setFavouritesInLocal(updateFavourites);\r\n\r\n    return {\r\n      ...state,\r\n      favourites: updateFavourites,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'REMOVE_FAVOURITE') {\r\n    const updateFavourites = state.favourites.filter(\r\n      (favourite) => favourite.imdbID !== action.payload,\r\n    );\r\n\r\n    setFavouritesInLocal(updateFavourites);\r\n\r\n    return {\r\n      ...state,\r\n      favourites: updateFavourites,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default favourites;\r\n","const initalMoviesState = {\r\n  items: [],\r\n};\r\n\r\nconst movies = (state = initalMoviesState, action) => {\r\n  if (action.type === 'SET_MOVIES') {\r\n    return {\r\n      ...state,\r\n      items: action.payload,\r\n      isLoaded: true,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default movies;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport favouritesReducer from './favourites';\r\nimport moviesReducer from './movies';\r\n\r\nconst rootReducer = combineReducers({ favourites: favouritesReducer, movies: moviesReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\n\r\nimport root from './reducers';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst store = createStore(\r\n  root,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {\r\n  Layout, Typography, Row, Col,\r\n} from 'antd';\r\nimport { GithubOutlined } from '@ant-design/icons';\r\n\r\nimport styles from './header.module.scss';\r\n\r\nconst Header = () => (\r\n  <Layout.Header className={styles.header}>\r\n    <Row gutter={[16, 16]} align=\"center\" justify=\"space-between\">\r\n      <Col xs={24} sm={12} className={styles.logo}>\r\n        <Typography.Title className={styles.title}>\r\n          <a href=\"https://allevchenko.ru/react-movies\">React Movies</a>\r\n        </Typography.Title>\r\n      </Col>\r\n      <Col xs={24} sm={12} className={styles.social}>\r\n        <a\r\n          href=\"https://github.com/ALevkas\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          title=\"go to github alevkas page\"\r\n        >\r\n          <GithubOutlined />\r\n        </a>\r\n      </Col>\r\n    </Row>\r\n  </Layout.Header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Row, Col, Button } from 'antd';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst menus = [\r\n  { id: 0, title: 'Main', path: '/' },\r\n  { id: 1, title: 'Favourites', path: '/favourites' },\r\n];\r\n\r\nconst Menu = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      {menus.map((menuItem) => {\r\n        const { id, title, path } = menuItem;\r\n        return (\r\n          <Col key={id}>\r\n            <Button type={location.pathname === path ? 'primary' : 'secondary'}>\r\n              <Link to={path}>{title}</Link>\r\n            </Button>\r\n          </Col>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const setMovies = (movies) => ({\r\n  type: 'SET_MOVIES',\r\n  payload: movies,\r\n});\r\n\r\nexport default setMovies;\r\n","const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nclass MovieService {\r\n  static getUrlMovies(nameMovie, filter = '') {\r\n    if (!API_KEY) return null;\r\n\r\n    return `https://www.omdbapi.com/?s=${nameMovie || 'wars'}&type=${\r\n      filter || ''\r\n    }&apikey=${API_KEY}`;\r\n  }\r\n}\r\n\r\nexport default MovieService;\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useFetching = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const setInitialStates = () => {\r\n    setIsLoading(true);\r\n    setData(null);\r\n    setError(null);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setInitialStates();\r\n      const response = await axios.get(url);\r\n      setData(response.data);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { data, isLoading, error };\r\n};\r\n\r\nexport default useFetching;\r\n","import { useRef, useEffect } from 'react';\r\n\r\nconst useIsMount = () => {\r\n  const isMountRef = useRef(true);\r\n\r\n  useEffect(() => {\r\n    isMountRef.current = false;\r\n  }, []);\r\n\r\n  return isMountRef.current;\r\n};\r\n\r\nexport default useIsMount;\r\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio, Typography } from 'antd';\n\nconst radioes = ['', 'movie', 'series'];\n\nconst Filter = (props) => {\n  const { getFilterValue } = props;\n\n  const [filterValue, setFilterValue] = useState('');\n\n  const onChange = (e) => {\n    setFilterValue(e.target.value);\n  };\n\n  useEffect(() => {\n    getFilterValue(filterValue);\n  }, [filterValue]);\n\n  return (\n    <Radio.Group onChange={onChange} value={filterValue}>\n      {radioes.map((radio) => (\n        <Radio key={radio} value={radio}>\n          <Typography.Text type=\"secondary\">{radio ? `${radio} only` : 'all'}</Typography.Text>\n        </Radio>\n      ))}\n    </Radio.Group>\n  );\n};\n\nFilter.propTypes = {\n  getFilterValue: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from 'antd';\r\n\r\nimport useIsMount from '../../Hooks/useIsMount';\r\n\r\nimport Filter from '../Filter/Filter';\r\n\r\nconst Search = ({ getMovies }) => {\r\n  const isMount = useIsMount();\r\n\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const onChange = (e) => setSearchValue(e.target.value);\r\n\r\n  const getFilterValue = (value = '') => {\r\n    setFilterValue(value);\r\n  };\r\n\r\n  const onSearch = () => {\r\n    getMovies(searchValue, filterValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMount) return;\r\n\r\n    onSearch();\r\n  }, [filterValue]);\r\n\r\n  return (\r\n    <>\r\n      <Input.Search\r\n        placeholder=\"input search movies\"\r\n        allowClear\r\n        enterButton=\"Search\"\r\n        size=\"large\"\r\n        value={searchValue}\r\n        onChange={onChange}\r\n        onSearch={onSearch}\r\n      />\r\n\r\n      <Filter getFilterValue={getFilterValue} />\r\n    </>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  getMovies: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Col, Card, Image, Typography, Skeleton, message,\r\n} from 'antd';\r\nimport {\r\n  PlayCircleOutlined,\r\n  QuestionCircleOutlined,\r\n  PlusCircleOutlined,\r\n  MinusCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { setAddFavourite, setRemoveFavourite } from '../../../redux/actions/favourites';\r\n\r\nimport styled from './movie.module.scss';\r\n\r\nconst Movie = ({\r\n  title, year, poster, imdbID, type,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const onPlay = () => {\r\n    window.open(`https://www.kinopoisk.ru/index.php?kp_query=${title}`);\r\n  };\r\n\r\n  const onAddFavourite = () => {\r\n    dispatch(\r\n      setAddFavourite({\r\n        Title: title,\r\n        Year: year,\r\n        Poster: poster,\r\n        imdbID,\r\n        Type: type,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onRemovedFavourite = () => {\r\n    dispatch(setRemoveFavourite(imdbID));\r\n\r\n    message.success(`${title} removed from favourites films`);\r\n  };\r\n\r\n  return (\r\n    <Col xs={24} sm={12} lg={8} xl={6}>\r\n      <Card\r\n        id={imdbID}\r\n        cover={\r\n          poster === 'N/A' ? (\r\n            <Skeleton.Image style={{ height: '450px', width: '300px' }} />\r\n          ) : (\r\n            <Image alt=\"poster\" src={poster} style={{ height: '450px' }} />\r\n          )\r\n        }\r\n        actions={\r\n          type === 'game'\r\n            ? [<QuestionCircleOutlined key=\"question\" title=\"It's game\" />]\r\n            : [\r\n              <PlayCircleOutlined key=\"play\" onClick={onPlay} title=\"Find at kinopoisk\" />,\r\n              location.pathname !== '/favourites' ? (\r\n                <PlusCircleOutlined\r\n                  key=\"add\"\r\n                  onClick={onAddFavourite}\r\n                  title=\"Add to favourites\"\r\n                />\r\n              ) : (\r\n                <MinusCircleOutlined\r\n                  key=\"add\"\r\n                  onClick={onRemovedFavourite}\r\n                  title=\"Remove from favourites\"\r\n                />\r\n              ),\r\n            ]\r\n        }\r\n      >\r\n        <div className={styled.meta}>\r\n          <div>\r\n            <Typography.Title level={5}>{title}</Typography.Title>\r\n          </div>\r\n          <div className={styled.description}>\r\n            <Typography.Text type=\"secondary\">{year}</Typography.Text>\r\n\r\n            <Typography.Text type=\"secondary\">{type}</Typography.Text>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nMovie.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  imdbID: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","export const setAddFavourite = (favourite) => ({\r\n  type: 'ADD_FAVOURITE',\r\n  payload: favourite,\r\n});\r\n\r\nexport const setRemoveFavourite = (favourite) => ({\r\n  type: 'REMOVE_FAVOURITE',\r\n  payload: favourite,\r\n});\r\n","import React from 'react';\nimport { Typography } from 'antd';\n\nconst Empty = () => (\n  <Typography.Title type=\"secondary\" level={2}>\n    Movies not found\n  </Typography.Title>\n);\n\nexport default Empty;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport Movie from './Movie/Movie';\r\nimport Empty from '../Messages/Empty';\r\n\r\nconst Movies = (props) => {\r\n  const { movies } = props;\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      {movies?.length ? (\r\n        movies?.map((movie) => (\r\n          <Movie\r\n            key={movie.imdbID}\r\n            title={movie.Title}\r\n            year={movie.Year}\r\n            poster={movie.Poster}\r\n            imdbID={movie.imdbID}\r\n            type={movie.Type}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Col span={24}>\r\n          <Empty />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nMovies.propTypes = {\r\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Spinner = () => <Spin tip=\"Loading...\" />;\r\n\r\nexport default Spinner;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Layout, BackTop, Typography } from 'antd';\r\n\r\nimport setMovies from '../../redux/actions/movies';\r\n\r\nimport MovieService from '../../API/Movie.Service';\r\nimport useFetching from '../../Hooks/useFetching';\r\n\r\nimport Search from '../../Components/Search/Search';\r\nimport Movies from '../../Components/Movies/Movies';\r\nimport Spinner from '../../Components/Spinner/Spinner';\r\n\r\nimport styles from './home.module.scss';\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector(({ movies }) => ({\r\n    items: movies.items,\r\n  }));\r\n\r\n  const [url, setUrl] = useState(MovieService.getUrlMovies());\r\n  const { data, isLoading, error } = useFetching(url);\r\n\r\n  const getMovies = async (nameMovie, filter) => {\r\n    setUrl(MovieService.getUrlMovies(nameMovie, filter));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch(setMovies(data.Search));\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout.Content className={styles.container}>\r\n      <Search getMovies={getMovies} />\r\n\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : error ? (\r\n        <Typography.Title level={2} type=\"danger\">\r\n          {`Attetion: ${error}`}\r\n        </Typography.Title>\r\n      ) : (\r\n        <Movies movies={items} />\r\n      )}\r\n      <BackTop />\r\n    </Layout.Content>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Layout, BackTop } from 'antd';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Movies from '../../Components/Movies/Movies';\r\n\r\nimport styles from './favourites.module.scss';\r\n\r\nconst Favourites = () => {\r\n  const { items } = useSelector(({ favourites }) => ({\r\n    items: favourites.favourites,\r\n  }));\r\n\r\n  return (\r\n    <Layout.Content className={styles.container}>\r\n      <Movies movies={items} />\r\n      <BackTop />\r\n    </Layout.Content>\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n","import React from 'react';\nimport { Typography } from 'antd';\n\nconst Error = () => (\n  <Typography.Title level={2}>\n    Упс, вы перешли на несуществующую страницу, скорее вернитесь назад.\n  </Typography.Title>\n);\n\nexport default Error;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Home from '../../Pages/Home/Home';\nimport Favourites from '../../Pages/Favourites/Favourites';\nimport Error from '../../Pages/Error/Error';\n\nconst AppRouter = () => (\n  <Switch>\n    <Route path=\"/\" exact>\n      <Home />\n    </Route>\n    <Route path=\"/favourites\" exact>\n      <Favourites />\n    </Route>\n    <Route path=\"/error\">\n      <Error />\n    </Route>\n    <Redirect to=\"/error\" />\n  </Switch>\n);\n\nexport default AppRouter;\n","import React from 'react';\nimport { Layout, Divider } from 'antd';\n\nimport Header from '../Header/Header';\nimport Menu from '../../Components/Menu/Menu';\nimport AppRouter from '../../Components/AppRouter/AppRouter';\n\nimport styles from './main.module.scss';\n\nconst Main = () => (\n  <Layout>\n    <Header />\n    <Layout className={styles.mainLayout}>\n      <Menu />\n      <Divider />\n      <AppRouter />\n    </Layout>\n  </Layout>\n);\n\nexport default Main;\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store';\r\n\r\nimport Main from './Layout/Main/Main';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nconst App = () => (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n      <Main />\r\n    </Provider>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1uyEF\",\"logo\":\"header_logo__21kg2\",\"social\":\"header_social__2prnw\",\"wrapper\":\"header_wrapper__3i4xy\",\"github\":\"header_github__1Q4dj\"};"],"sourceRoot":""}