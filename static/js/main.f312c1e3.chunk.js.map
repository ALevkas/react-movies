{"version":3,"sources":["Layout/Main/main.module.scss","app.module.scss","Layout/Header/Header.jsx","Components/Filter/Filter.jsx","Components/Search/Search.jsx","Components/Movies/Movie/Movie.jsx","Components/Messages/Empty.jsx","Components/Movies/Movies.jsx","Components/Spinner/Spinner.jsx","Layout/Main/Main.jsx","App.jsx","index.jsx","Layout/Header/header.module.scss","Components/Movies/Movie/movie.module.scss"],"names":["module","exports","Header","className","styles","nav","Title","title","href","target","rel","GithubOutlined","style","fontSize","color","radioes","Filter","props","getFilterValue","useState","filterValue","setFilterValue","useEffect","Group","onChange","e","value","map","radio","Text","type","Search","getMovies","searchValue","setSearchValue","onSearch","placeholder","allowClear","enterButton","size","Movie","year","poster","imdbID","xs","span","lg","id","cover","Image","height","width","alt","src","actions","QuestionCircleOutlined","PlayCircleOutlined","onClick","window","open","styled","meta","level","description","Empty","Movies","movies","gutter","length","movie","Year","Poster","Type","Spinner","tip","API_KEY","process","Main","setMovies","loading","setLoading","nameMovie","filter","axios","get","then","res","loadingMovies","data","Content","container","App","mainLayout","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f312c1e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__RRDWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainLayout\":\"app_mainLayout__3bqqS\"};","import React from 'react';\r\nimport { Layout, Typography } from 'antd';\r\nimport { GithubOutlined } from '@ant-design/icons';\r\nimport styles from './header.module.scss';\r\n\r\nconst Header = () => (\r\n  <Layout.Header>\r\n    <nav className={styles.nav}>\r\n      <Typography.Title className={styles.title}>\r\n        <a href=\"https://allevchenko.ru/react-movies\">React Movies</a>\r\n      </Typography.Title>\r\n      <a\r\n        href=\"https://github.com/ALevkas\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        title=\"go to github alevkas page\"\r\n      >\r\n        <GithubOutlined style={{ fontSize: '32px', color: '#fff' }} />\r\n      </a>\r\n    </nav>\r\n  </Layout.Header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio, Typography } from 'antd';\n\nconst radioes = ['', 'movie', 'series'];\n\nconst Filter = (props) => {\n  const { getFilterValue } = props;\n\n  const [filterValue, setFilterValue] = useState('');\n\n  const onChange = (e) => {\n    setFilterValue(e.target.value);\n  };\n\n  useEffect(() => {\n    getFilterValue(filterValue);\n  }, [filterValue]);\n\n  return (\n    <Radio.Group onChange={onChange} value={filterValue}>\n      {radioes.map((radio) => (\n        <Radio key={radio} value={radio}>\n          <Typography.Text type=\"secondary\">{radio ? `${radio} only` : 'all'}</Typography.Text>\n        </Radio>\n      ))}\n    </Radio.Group>\n  );\n};\n\nFilter.propTypes = {\n  getFilterValue: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from 'antd';\r\n\r\nimport Filter from '../Filter/Filter';\r\n\r\nconst Search = ({ getMovies }) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const onChange = (e) => setSearchValue(e.target.value);\r\n\r\n  const getFilterValue = (value = 'all') => {\r\n    setFilterValue(value);\r\n  };\r\n\r\n  const onSearch = () => {\r\n    getMovies(searchValue, filterValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onSearch();\r\n  }, [filterValue]);\r\n\r\n  return (\r\n    <>\r\n      <Input.Search\r\n        placeholder=\"input search movies\"\r\n        allowClear\r\n        enterButton=\"Search\"\r\n        size=\"large\"\r\n        value={searchValue}\r\n        onChange={onChange}\r\n        onSearch={onSearch}\r\n      />\r\n\r\n      <Filter getFilterValue={getFilterValue} />\r\n    </>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  getMovies: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Col, Card, Image, Typography, Skeleton,\n} from 'antd';\nimport { PlayCircleOutlined, QuestionCircleOutlined } from '@ant-design/icons';\n\nimport styled from './movie.module.scss';\n\nconst Movie = ({\n  title, year, poster, imdbID, type,\n}) => {\n  const onPlay = () => {\n    window.open(`https://www.kinopoisk.ru/index.php?kp_query=${title}`);\n  };\n\n  return (\n    <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n      <Card\n        id={imdbID}\n        cover={\n          poster === 'N/A' ? (\n            <Skeleton.Image style={{ height: '450px', width: '300px' }} />\n          ) : (\n            <Image alt=\"poster\" src={poster} style={{ height: '450px' }} />\n          )\n        }\n        actions={\n          type === 'game'\n            ? [<QuestionCircleOutlined key=\"question\" title=\"It's game\" />]\n            : [<PlayCircleOutlined key=\"play\" onClick={onPlay} title=\"Find at kinopoisk\" />]\n        }\n      >\n        <div className={styled.meta}>\n          <div>\n            <Typography.Title level={5}>{title}</Typography.Title>\n          </div>\n          <div className={styled.description}>\n            <Typography.Text type=\"secondary\">{year}</Typography.Text>\n\n            <Typography.Text type=\"secondary\">{type}</Typography.Text>\n          </div>\n        </div>\n      </Card>\n    </Col>\n  );\n};\n\nMovie.propTypes = {\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Movie;\n","import React from 'react';\nimport { Typography } from 'antd';\n\nconst Empty = () => (\n  <Typography.Title type=\"secondary\" level={2}>\n    Movies not found\n  </Typography.Title>\n);\n\nexport default Empty;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport Movie from './Movie/Movie';\r\nimport Empty from '../Messages/Empty';\r\n\r\nconst Movies = (props) => {\r\n  const { movies } = props;\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      {movies?.length ? (\r\n        movies?.map((movie) => (\r\n          <Movie\r\n            key={movie.imdbID}\r\n            title={movie.Title}\r\n            year={movie.Year}\r\n            poster={movie.Poster}\r\n            imdbID={movie.imdbID}\r\n            type={movie.Type}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Col span={24}>\r\n          <Empty />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nMovies.propTypes = {\r\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Spinner = () => <Spin tip=\"Loading...\" />;\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Layout, BackTop } from 'antd';\n\nimport Search from '../../Components/Search/Search';\nimport Movies from '../../Components/Movies/Movies';\nimport Spinner from '../../Components/Spinner/Spinner';\n\nimport styles from './main.module.scss';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst Main = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getMovies = (nameMovie, filter) => {\n    setLoading(true);\n\n    if (!API_KEY) return;\n\n    axios\n      .get(\n        `https://www.omdbapi.com/?s=${nameMovie || 'wars'}&type=${filter || ''}&apikey=${API_KEY}`,\n      )\n      .then((res) => {\n        const loadingMovies = res.data.Search;\n        setMovies(loadingMovies);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <Layout.Content className={styles.container}>\n      <Search getMovies={getMovies} />\n      {loading ? <Spinner /> : <Movies movies={movies} />}\n      <BackTop />\n    </Layout.Content>\n  );\n};\nexport default Main;\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './Layout/Header/Header';\r\nimport Main from './Layout/Main/Main';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport styles from './app.module.scss';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <Layout>\r\n      <Header />\r\n      <Layout className={styles.mainLayout}>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Main />\r\n          </Route>\r\n        </Switch>\r\n      </Layout>\r\n    </Layout>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"header_nav__1LNSj\",\"title\":\"header_title__3C9Vk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"movie_meta__1Fx2k\",\"description\":\"movie_description__2j5ky\"};"],"sourceRoot":""}